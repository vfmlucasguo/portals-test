var capacitorPortals = (function (exports, core) {
    'use strict';

    const Portals = core.registerPlugin('Portals');
    const reload = () => {
        return Portals.reload();
    };
    const syncOne = async (options) => {
        const result = await Portals.syncOne(options);
        if ('failStep' in result) {
            return Promise.reject(result);
        }
        else {
            return Promise.resolve(result);
        }
    };
    const syncAll = (callback) => {
        Portals.syncAll({}, (result) => {
            if ('complete' in result) {
                callback.onSyncComplete();
            }
            else if ('failStep' in result) {
                callback.onError(result);
            }
            else {
                callback.onAppComplete(result);
            }
        });
    };
    const syncSome = (options, callback) => {
        Portals.syncSome(options, (result) => {
            if ('complete' in result) {
                callback.onSyncComplete();
            }
            else if ('failStep' in result) {
                callback.onError(result);
            }
            else {
                callback.onAppComplete(result);
            }
        });
    };

    exports.Portals = Portals;
    exports.reload = reload;
    exports.syncAll = syncAll;
    exports.syncOne = syncOne;
    exports.syncSome = syncSome;

    Object.defineProperty(exports, '__esModule', { value: true });

    return exports;

})({}, capacitorExports);
//# sourceMappingURL=plugin.js.map
