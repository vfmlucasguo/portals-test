import { registerPlugin } from '@capacitor/core';
const Portals = registerPlugin('Portals');
export const reload = () => {
    return Portals.reload();
};
export const syncOne = async (options) => {
    const result = await Portals.syncOne(options);
    if ('failStep' in result) {
        return Promise.reject(result);
    }
    else {
        return Promise.resolve(result);
    }
};
export const syncAll = (callback) => {
    Portals.syncAll({}, (result) => {
        if ('complete' in result) {
            callback.onSyncComplete();
        }
        else if ('failStep' in result) {
            callback.onError(result);
        }
        else {
            callback.onAppComplete(result);
        }
    });
};
export const syncSome = (options, callback) => {
    Portals.syncSome(options, (result) => {
        if ('complete' in result) {
            callback.onSyncComplete();
        }
        else if ('failStep' in result) {
            callback.onError(result);
        }
        else {
            callback.onAppComplete(result);
        }
    });
};
export * from './definitions';
export { Portals };
//# sourceMappingURL=index.js.map